dp五步：
第 1 步：定义状态【dp数组（dp[i]）的意义】
第 2 步：思考状态转移方程
第 3 步：考虑初始化【dp数组的初始状态】
第 4 步：考虑输出【考虑何时产出可能的最大值】
第 5 步：考虑优化空间
思考点：二维是否能用一维求解
情况一：如果dp[i][j]由其左上角两个点的状态转移而来dp[i-1][j]、dp[i][j-1]可以考虑滚动数组
情况一：如果dp[i][j]由其左上角三个点的状态转移而来dp[i-1][j]、dp[i][j-1]、dp[i-1][j-1]可以考虑滚动数组+northWest变量保存左上角值
情况三：如果dp[i][j]由其左上角一个点的状态转移而来dp[i-1][j-1]，那么可以使用二层for循环采用倒序遍历的滚动数组方式
一维dp状态是否只由前一个状态或前两个变量决定继而是否可以优化到常量空间

其他dp没有在dp目录的：42、接雨水
字符串dp：
5最长回文子串、516最长回文子序列、72. 编辑距离、32. 最长有效括号
区间dp:
5最长回文子串、516最长回文子序列
子序列相关dp:
53.最大子序和（连续）、152.乘积最大子数组（连续）、300.最长递增子序列（不连续）    这三道都是一维dp
718.最长重复子数组（连续）、1143.最长公共子序列（不连续）、72.编辑距离、5最长回文子串、516.最长回文子序列  这几道都是二维dp
与背包问题相关dp:
首先就是背包问题中的01背包、完全背包、416. 分割等和子集（01背包）、494. 目标和(01背包-求方案数)
322. 零钱兑换 (完全背包)、518. 零钱兑换II(完全背包-求方案数)、377. 组合总和 Ⅳ(完全背包-求排列数)
股票买卖系列、打家劫舍系列
树形dp:337. 打家劫舍 III、96. 不同的二叉搜索树
路径有关|计数型dp：62. 不同路径、63. 不同路径 II、64. 最小路径和、96. 不同的二叉搜索树

